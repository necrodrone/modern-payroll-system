# Service Name and Port
spring.application.name=notification-service
# Server Port
server.port=8084

# RabbitMQ Configuration
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
# spring.rabbitmq.username=${RABBITMQ_USERNAME}
# spring.rabbitmq.password=${RABBITMQ_PASSWORD}
# docker run -d --name rabbitmq -p 5672:5672 -p 15672:15672 rabbitmq:3-management

# Email Configuration (Example using Gmail SMTP for testing)
# For production, use a dedicated email service like SendGrid, Mailgun, etc.
spring.mail.host=smtp.gmail.com
spring.mail.port=587
# spring.mail.username=${MAIL_USERNAME}
# spring.mail.password=${MAIL_PASSWORD}
spring.mail.username=modjgrefaldeo@gmail.com
spring.mail.password=znkf rcnr guah wley
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
 # Trust for Gmail
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# Twilio Configuration
twilio.account.sid=AC968ad781b4d851fc5ba8cbf600fb5222
twilio.auth.token=e90279403d6fa2b1ed2ee89c53c717e7
twilio.phone.number=+19863005013
# twilio.account.sid=${TWILIO_ACCOUNT_SID}
# twilio.auth.token=${TWILIO_AUTH_TOKEN}
# twilio.phone.number=${TWILIO_PHONE_NUMBER}

# Define RabbitMQ Queue Name (must match what employee-service publishes to)
rabbitmq.queue.employee-created=employee.created.queue
rabbitmq.exchange.employee-events=employee.events.exchange
rabbitmq.routingkey.employee-created=employee.created.routingkey
